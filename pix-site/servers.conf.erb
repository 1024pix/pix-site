log_format keyvalue
  'method=$request_method'
  ' path="$request_uri"'
  ' host=$host'
  ' request_id=$http_x_request_id'
  ' from="$remote_addr"'
  ' protocol=$scheme'
  ' status=$status'
  ' duration=${request_time}s'
  ' bytes=$bytes_sent'
  ' referer="$http_referer"'
  ' user_agent="$http_user_agent"'<%#
    To allow dynamic logging format for nginx,
    create a json that contains the key/value pairs
    you want to add to nginx logging.
    For the logs to be correctly parsed, use the nginx_logger_version parameter.
    For example:
    ADDITIONAL_NGINX_LOGS='{"nginx_logger_version":"1", "my_custom_header":"$http_my_custom_header"}'
  %><%
    require 'json';
    JSON.parse(ENV['ADDITIONAL_NGINX_LOGS']||'{}').each do |nginx_key,value| %>
  ' <%= nginx_key %>="<%= value %>"'<% end %>;

# In order to avoid logging access twice per request
# it is necessary to turn off the top-level (e.g. http) buildpack default access_log
# as we are about to override it in the server directive here below
access_log off;

port_in_redirect off;

<% if ENV['NGINX_GEOAPI_UPSTREAM_HOST'] %>
upstream api {
  server <%= ENV['NGINX_GEOAPI_UPSTREAM_HOST'] %>:443 max_fails=<%= ENV['NGINX_GEOAPI_UPSTREAM_MAX_FAILS'] || 3 %> fail_timeout=<%= ENV['NGINX_GEOAPI_UPSTREAM_FAIL_TIMEOUT'] || '5s' %>;
}
<% end %>

server {
  access_log logs/access.log keyvalue;

  listen <%= ENV['PORT'] %>;

  server_name ~(?<extension>(fr|org))$;
  if ($extension = '') {
    set $extension 'fr';
  }

  if ($http_x_forwarded_host ~ \.org) {
    set $extension 'org';
  }

<% if ENV['NGINX_GEOAPI_UPSTREAM_HOST'] %>
  location /geolocate {
    proxy_pass https://api/me;
    proxy_redirect default;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host <%= ENV['NGINX_GEOAPI_UPSTREAM_HOST'] %>;
  }
<% end %>

  charset utf-8;

  # Disable compression that is performed by the Scalingo router anyway
  gzip off;

  # Serve from dist/pix.fr or dist/pix.org depending on the extension
  root /app/build/$extension;

  rewrite ^/en-gb(.*)$ /en$1 permanent;
  rewrite ^/(aide|help)$ https://support.pix.org redirect;
  rewrite ^/support/(enseignement-scolaire/enseignant-ou-personnel-de-direction|enseignement-superieur|mediation-numerique|centre-de-certification|professionnel)$ https://support.pix.org redirect;
  rewrite ^/employeurs$ https://pro.pix.fr redirect;

  error_page 400 401 403 404 418 500 502 503 504 /404.html;

  location ~ ^/(_assets|_nuxt|images|scripts)/ {
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
  }
}
